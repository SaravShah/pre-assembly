Download:

    - Receive the bundle of material (e.g. REVS hard drive).
    - Copy the bundle to a prep area on the thumper staging machine.
    - Launch the automated assembly process.


Assembly preparation:

    # Load information from the data provider.
    - Manifest.
    - Expected checksum metadata.

    For each digital object:

        - Register the object and acquire a druid.
        - Move object to thumper staging directory (eg, dpgthumper-staging/PROJECT/DRUID_TREE).
        - Generate a minimal content_metadata.xml file.
        - Create symlink in dor/workspace pointing to the object on the thumper.
        - Initialize the object's workflow in DOR, which will unleash the robots.


Assembly robots:

    # ROBOT.
    - Compute image attributes: exif and related info.
    - Store that info in content_metadata.xml.

    # ROBOT.
    - Compute checksums.
    - Store that info in content_metadata.xml.

    # ROBOT.
    - Compare actual checksums against expected checksums.

    # ROBOT.
    - Create JP2

    # ROBOT.
    - Generate descriptive metadata.


Common accessioning begins in one of two ways:
    - Automatically (triggered by the workflow state)
    - After human approval (if the workflow specification calls for it).




===================================================

Misc notes on existing code:

    Required parameters
        tiff file name

    Image attributes: computed, or supplied optionally (*)
        exif information
        jp2 file name (*)
        allow overwrite (*)
        output profile (*)
        input profile

    temp tiff file name
        pixdem
        layers

        publish (*)
        preserve (*)
        shelve (*)
        content label (*)
        file size
        md5 checksum
        sha1 checksum
        format

    Sanity checks
        tiff file exists
        mimetype == tiff
        jp2 file does not exist (unless overwrite requested)
        output profile file exists

        image exists

    Constants
        output profile file name
        input profile file name

        content type description
        cropped

    System calls
        should check return values
        need a mechanism by bypassing/mocking
        is the generic rescue block needed or useful?

